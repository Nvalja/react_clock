{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","dateOut","Date","this","timerInterval","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","defaultProps","App","isClockVisible","className","clockName","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGMA,E,4MACJC,MAAQ,CACNC,QAAS,IAAIC,M,kEAGM,IAAD,OAClBC,KAAKC,cAAgBC,aAAY,WAC/B,EAAKC,SAAS,CAAEL,QAAS,IAAIC,OAE5BK,QAAQC,IAAI,EAAKR,MAAMC,QAAQQ,wBAC/B,O,yCAGcC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DR,KAAKS,MAAMD,S,6CAK5EE,cAAcV,KAAKC,iB,+BAInB,OACE,oCACGD,KAAKH,MAAMC,QAAQQ,0B,GA3BRK,IAAMC,WAqC1BhB,EAAMiB,aAAe,CACnBL,KAAM,MAGOZ,QCYAkB,G,kNAlDbjB,MAAQ,CACNkB,gBAAgB,G,uDAGR,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,2CACA,yBAAKA,UAAU,kBACb,2CAEE,6BACChB,KAAKH,MAAMkB,gBAAkB,kBAAC,EAAD,CAAOP,KAAMR,KAAKH,MAAMoB,cAG1D,yBAAKD,UAAU,gBACb,4BACEA,UAAU,cACVE,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEY,gBAAgB,MAJpC,cASA,4BACEC,UAAU,cACVE,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEY,gBAAgB,MAJpC,cAUA,4BACEC,UAAU,cACVE,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEc,UAAWG,KAAKC,aAJpC,yB,GApCQV,IAAMC,YCDxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5c03fbe2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    dateOut: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerInterval = setInterval(() => {\n      this.setState({ dateOut: new Date() });\n      // eslint-disable-next-line\n       console.log(this.state.dateOut.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerInterval);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.dateOut.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nClock.defaultProps = {\n  name: 3.14,\n};\n\nexport default Clock;\n","import React from 'react';\n\nimport Clock from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"App__clockface\">\n          <p>\n            Current time:\n            <br />\n            {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n          </p>\n        </div>\n        <div className=\"App__buttons\">\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: true });\n            }}\n          >\n            Show Clock\n          </button>\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: false });\n            }}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ clockName: Math.random() });\n            }}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}